{
  "api/CascLib.NET.CascFeature.html": {
    "href": "api/CascLib.NET.CascFeature.html",
    "title": "Enum CascFeature | CascLib.NET",
    "keywords": "Enum CascFeature Namespace CascLib.NET Assembly CascLib.NET.dll Denotes which features are available on a CascStorage. [Flags] public enum CascFeature : uint Fields ContentFlags = 128 Content flags are supported by the storage. FileDataIds = 32 The storage indexes files by their FileDataId. FileNameHashes = 8 The storage contains file name hashes on all files. FileNameHashesOptional = 16 The storage contains file name hashes for some files. FileNames = 1 File names are supported by the storage. LocaleFlags = 64 Locale flags are supported by the storage. Online = 256 The storage is an online storage. RootCKey = 2 Present if the storage's ROOT returns CKey. If not present, the root contains EKeys. Tags = 4 Tags are supported by the storage."
  },
  "api/CascLib.NET.CascFileStream.html": {
    "href": "api/CascLib.NET.CascFileStream.html",
    "title": "Class CascFileStream | CascLib.NET",
    "keywords": "Class CascFileStream Namespace CascLib.NET Assembly CascLib.NET.dll Stream for reading data from a file in CascStorage. public class CascFileStream : Stream, IAsyncDisposable, IDisposable Inheritance object MarshalByRefObject Stream CascFileStream Implements IAsyncDisposable IDisposable Inherited Members Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.DisposeAsync() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadByte() Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Synchronized(Stream) Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CascFileStream(nint, string) Opens a file in CASC storage for reading. public CascFileStream(nint hStorage, string filePath) Parameters hStorage nint Handle to the CASC storage to open the file from. filePath string Path to the file within the CascStorage. Exceptions FileNotFoundException Thrown if no file was found at the given path. Properties CanRead Whether the file can be read from. public override bool CanRead { get; } Property Value bool Remarks Always returns true. CanSeek Whether the consumer can move the cursor within the file. public override bool CanSeek { get; } Property Value bool Remarks Always returns true. CanWrite Whether the file can be written to. public override bool CanWrite { get; } Property Value bool Remarks Always returns false. Length Total size of the file, in bytes. public override long Length { get; } Property Value long Position Gets or sets the position of the cursor within the open file. public override long Position { get; set; } Property Value long Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool Flush() Clears all buffers for this stream, and causes all buffered data to be written to the underlying device. public override void Flush() Exceptions NotSupportedException Thrown always, as CascFileStream does not support writing. Read(byte[], int, int) Reads a sequence of bytes from the file, and advances the position of the stream by the number of bytes read. public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] Buffer to read the data into. offset int Index of the byte within the buffer to begin reading the data into. count int Total number of bytes to read. Returns int Number of bytes that were read during this operation. Seek(long, SeekOrigin) Sets the Position of this stream. public override long Seek(long offset, SeekOrigin origin) Parameters offset long The number of bytes to move the cursor. Accepts negative values. origin SeekOrigin Position within the stream that offset is relative to. Returns long New position of the cursor within the stream. SetLength(long) Sets the length of the stream. public override void SetLength(long value) Parameters value long New length of the stream. Exceptions NotSupportedException Always thrown as CascFileStream does not support write operations. Write(byte[], int, int) Writes the given byte sequence to the underlying file. public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] The bytes to write to the file. offset int Position within the buffer to begin writing bytes from. count int Number of bytes to write to the file. Exceptions NotSupportedException Always thrown as CascFileStream does not support write operations."
  },
  "api/CascLib.NET.CascFindData.html": {
    "href": "api/CascLib.NET.CascFindData.html",
    "title": "Struct CascFindData | CascLib.NET",
    "keywords": "Struct CascFindData Namespace CascLib.NET Assembly CascLib.NET.dll Represents a file in CascStorage. public struct CascFindData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks See also Original C++ Code Fields CASC_INVALID_ID Represents an invalid identifier. public const uint CASC_INVALID_ID = 4294967295 Field Value uint ContentFlags Content flags. public uint ContentFlags Field Value uint Remarks Only valid if the storage supports content flags, otherwise contains CASC_INVALID_ID. ContentKey Content key. public byte[] ContentKey Field Value byte[] Remarks This is present if RootCKey is present in Tags. EncodedKey Encoded key. public byte[] EncodedKey Field Value byte[] Remarks This is always present. FileDataId File data ID. public uint FileDataId Field Value uint Remarks Only valid if the storage supports file data IDs, otherwise contains CASC_INVALID_ID. FileName Full name of the file. public string FileName Field Value string Remarks When NameType is CKey or EKey, this is the name of the key instead. FileSize Size of the file, as retrieved from CKey entry. public ulong FileSize Field Value ulong LocaleFlags Locale flags. public uint LocaleFlags Field Value uint Remarks Only valid if the storage supports locale flags, otherwise contains CASC_INVALID_ID. NameType Type of the name contained in FileName. public CascNameType NameType Field Value CascNameType Remarks If the file name is not known, CascLib uses a FileDataId-like name or a string representation of CKey/EKey. PlainName Plain name of the file. public string PlainName Field Value string Remarks Underlying char* points to the substring within FileName that excludes the path component and only includes the file name itself. SpanCount Span count. public uint SpanCount Field Value uint TagBitMask Tag mask. public ulong TagBitMask Field Value ulong Remarks Only valid if the storage supports tags, otherwise will be 0. Properties IsFileAvailable true if the file is available locally. public bool IsFileAvailable { get; } Property Value bool"
  },
  "api/CascLib.NET.CascNameType.html": {
    "href": "api/CascLib.NET.CascNameType.html",
    "title": "Enum CascNameType | CascLib.NET",
    "keywords": "Enum CascNameType Namespace CascLib.NET Assembly CascLib.NET.dll The type of the FileName in CascFindData. public enum CascNameType Fields CKey = 2 FileName contains the name of the content key. DataId = 1 FileName contains the data identifier. EKey = 3 FileName contains the name of the encoded key. Full = 0 FileName contains a full file path. Remarks See also Original C++ Code"
  },
  "api/CascLib.NET.CascStorage.html": {
    "href": "api/CascLib.NET.CascStorage.html",
    "title": "Class CascStorage | CascLib.NET",
    "keywords": "Class CascStorage Namespace CascLib.NET Assembly CascLib.NET.dll Provides access to files in a CASC storage. Can be enumerated to access files sequentially. public sealed class CascStorage : IEnumerable<CascFindData>, IEnumerable, IDataStorage, IDisposable Inheritance object CascStorage Implements IEnumerable<CascFindData> IEnumerable IDataStorage IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Remarks Consumers must dispose the storage when finished with it to free up resources. Constructors CascStorage(string) Opens the CASC storage at the given file path. public CascStorage(string path) Parameters path string Path to the CASC storage on disk, usually the directory that contains the game executable. Exceptions Win32Exception Thrown if the CASC storage fails to open. Properties Features Features that are available on this storage. public CascFeature Features { get; } Property Value CascFeature LocalFileCount Number of local files in the storage. public int LocalFileCount { get; } Property Value int Remarks Files can exist under multiple different names, so the total number of files in the archive can be higher than the value returned by this info class. PathProduct Open parameters of the storage. public string PathProduct { get; } Property Value string Remarks AKA LocalPath:ProductCode. Product Information about the product associated with this storage. public CascStorageProduct Product { get; } Property Value CascStorageProduct Tags Information about tags included in the storage. public CascStorageTags Tags { get; } Property Value CascStorageTags TotalFileCount Total number of files in the storage, including files that have not been downloaded. public int TotalFileCount { get; } Property Value int Methods Dispose() Closes the CASC storage to free up resources. public void Dispose() GetEnumerator() public IEnumerator<CascFindData> GetEnumerator() Returns IEnumerator<CascFindData> OpenFile(string) Opens a file for reading. public Stream OpenFile(string path) Parameters path string The path to the file in storage. Returns Stream An open Stream that wraps the target file. Remarks Caller is responsible for disposing the Stream when finished with it. Exceptions FileNotFoundException Thrown if a file cannot be found at the given path. ReadFileAsString(string) Reads the contents of an entire file as a UTF8 string. public string ReadFileAsString(string path) Parameters path string The path to the file in storage. Returns string String content of the target file. Exceptions FileNotFoundException Thrown if a file cannot be found at the given path. TryOpenFile(string, out Stream?) Attempts to open a file for reading. public bool TryOpenFile(string path, out Stream? stream) Parameters path string The path to the file in storage. stream Stream An open Stream that wraps the target file. Will be null if this method returns false. Returns bool true if the file was opened successfully, otherwise false. Remarks Caller is responsible for disposing the Stream when finished with it."
  },
  "api/CascLib.NET.CascStorageInfoClass.html": {
    "href": "api/CascLib.NET.CascStorageInfoClass.html",
    "title": "Enum CascStorageInfoClass | CascLib.NET",
    "keywords": "Enum CascStorageInfoClass Namespace CascLib.NET Assembly CascLib.NET.dll The type of information requested about a CascStorage. public enum CascStorageInfoClass Fields Features = 2 Requests the flags that express which features are used on this storage. InstalledLocales = 3 Not supported by CascLib. LocalFileCount = 0 Requests to number of local files in the storage. PathProduct = 6 Requests Path:Product as an LPTSTR buffer. Product = 4 Requests CASC_STORAGE_PRODUCT. Tags = 5 Requests the CASC_STORAGE_TAGS structure. TotalFileCount = 1 Requests the total file count, including files that have not been downloaded."
  },
  "api/CascLib.NET.CascStorageProduct.html": {
    "href": "api/CascLib.NET.CascStorageProduct.html",
    "title": "Struct CascStorageProduct | CascLib.NET",
    "keywords": "Struct CascStorageProduct Namespace CascLib.NET Assembly CascLib.NET.dll The product that a CascStorage is associated with. public struct CascStorageProduct Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields BuildNumber Build number of the product. public uint BuildNumber Field Value uint Remarks If this is zero, then CascLib did not recognize the build number. CodeName Code name of the product (e.g. \"wowt\" = \"World of Warcraft PTR\"). public string CodeName Field Value string"
  },
  "api/CascLib.NET.CascStorageTag.html": {
    "href": "api/CascLib.NET.CascStorageTag.html",
    "title": "Struct CascStorageTag | CascLib.NET",
    "keywords": "Struct CascStorageTag Namespace CascLib.NET Assembly CascLib.NET.dll public struct CascStorageTag Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Name Name of the tag. public string Name Field Value string NameLength Length of Name. public uint NameLength Field Value uint Value Value of the tag. public uint Value Field Value uint"
  },
  "api/CascLib.NET.CascStorageTags.html": {
    "href": "api/CascLib.NET.CascStorageTags.html",
    "title": "Struct CascStorageTags | CascLib.NET",
    "keywords": "Struct CascStorageTags Namespace CascLib.NET Assembly CascLib.NET.dll Holds CascStorageTags for a storage. public struct CascStorageTags Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Reserved Reserved for future use. public ulong Reserved Field Value ulong TagCount Number of items in the Tags array. public ulong TagCount Field Value ulong Tags Array of CASC tags. public CascStorageTag[] Tags Field Value CascStorageTag[]"
  },
  "api/CascLib.NET.IDataStorage.html": {
    "href": "api/CascLib.NET.IDataStorage.html",
    "title": "Interface IDataStorage | CascLib.NET",
    "keywords": "Interface IDataStorage Namespace CascLib.NET Assembly CascLib.NET.dll Represents a construct that can access files. public interface IDataStorage : IDisposable Inherited Members IDisposable.Dispose() Methods OpenFile(string) Opens a file for reading. Stream OpenFile(string path) Parameters path string The path to the file in storage. Returns Stream An open Stream that wraps the target file. Remarks Caller is responsible for disposing the Stream when finished with it. Exceptions FileNotFoundException Thrown if a file cannot be found at the given path. ReadFileAsString(string) Reads the contents of an entire file as a UTF8 string. string ReadFileAsString(string path) Parameters path string The path to the file in storage. Returns string String content of the target file. Exceptions FileNotFoundException Thrown if a file cannot be found at the given path. TryOpenFile(string, out Stream?) Attempts to open a file for reading. bool TryOpenFile(string path, out Stream? stream) Parameters path string The path to the file in storage. stream Stream An open Stream that wraps the target file. Will be null if this method returns false. Returns bool true if the file was opened successfully, otherwise false. Remarks Caller is responsible for disposing the Stream when finished with it."
  },
  "api/CascLib.NET.html": {
    "href": "api/CascLib.NET.html",
    "title": "Namespace CascLib.NET | CascLib.NET",
    "keywords": "Namespace CascLib.NET Classes CascFileStream Stream for reading data from a file in CascStorage. CascStorage Provides access to files in a CASC storage. Can be enumerated to access files sequentially. Structs CascFindData Represents a file in CascStorage. CascStorageProduct The product that a CascStorage is associated with. CascStorageTag CascStorageTags Holds CascStorageTags for a storage. Interfaces IDataStorage Represents a construct that can access files. Enums CascFeature Denotes which features are available on a CascStorage. CascNameType The type of the FileName in CascFindData. CascStorageInfoClass The type of information requested about a CascStorage."
  },
  "index.html": {
    "href": "index.html",
    "title": "CascLib.NET Documentation | CascLib.NET",
    "keywords": "CascLib.NET Documentation CascLib.NET is a simple .NET wrapper library for CascLib, a library for reading CASC storages from Blizzard games. API Documentation Source Code"
  }
}